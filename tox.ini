# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
;lib_path = {toxinidir}/lib/charms/operator_name_with_underscores
all_path = {[vars]src_path} {[vars]tst_path} 

[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=pdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:format]
description = Apply coding style standards to code
deps =
    ruff
commands =
    ruff check --fix {[vars]all_path}
    ruff format {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    ruff
    codespell
    tomli
commands =
    # if this charm owns a lib, uncomment "lib_path" variable
    # and uncomment the following line
    # codespell {[vars]lib_path}
    codespell {tox_root}
    ruff check {[vars]all_path}
    ruff format --check {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage[toml]
    -r{toxinidir}/requirements.txt
commands =
    coverage run --source={[vars]src_path} \
        -m pytest --ignore={[vars]tst_path}integration -vv --tb native -s {posargs}
    coverage report

[testenv:integration]
description = Run integration tests
deps =
    pytest
    juju
    pytest-operator
    pytest-asyncio
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native --asyncio-mode=auto --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs}
